// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @map("id")
  name     String
  username String   @unique
  password String
  age      Int
  email    String   @unique
  createdAt DateTime @default(now()) @map("created_at")

  // relatioships
  groups       Group[]  @relation("UserGroups")
  friends      User[]   @relation("friends")
  friendOf     User[]   @relation("friends")
  messagesFrom Message[]   @relation("MessageFromUser")
  messagesTo   Message[]    @relation("MessageToUser")
  messages     MessageGroup[]
  adminIn      Group[]      @relation("GroupAdmin")
  credentials Credential?   @relation("UserCredentials")
}

model Group {
  id          String   @id @map("id")
  adminId     String
  createdAt   DateTime @default(now()) @map("created_at")
  title       String

  // relationships
  admin        User     @relation("GroupAdmin", fields: [adminId], references: [id])
  participants User[]   @relation("UserGroups")
  messages     MessageGroup[]
}

model Message {
  id            String   @id @map("id")
  content       String
  time          DateTime
  fromUserId    String
  toUserId      String
  createdAt     DateTime @default(now()) @map("created_at")

  // security - JSON with encrypted session keys
  publicCredentials String

  // relationships
  fromUser User @relation("MessageFromUser", fields: [fromUserId], references: [id])
  toUser   User @relation("MessageToUser", fields: [toUserId], references: [id])
}

model MessageGroup {
  id            String   @id @map("id")
  content       String
  time          DateTime @default(now())
  fromUserId    String
  groupId      String
  createdAt     DateTime @default(now()) @map("created_at")

  // security - JSON with encrypted session keys
  publicCredentials String

  // relationships
  fromUser User @relation(fields: [fromUserId], references: [id])
  group   Group @relation(fields: [groupId], references: [id])
}

model Credential {
  publicKey  String
  userId     String  @id @map("user_id")
  // relationship
  user User @relation("UserCredentials", fields: [userId], references: [id])
}